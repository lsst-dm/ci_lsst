#!/bin/sh
export LD_LIBRARY_PATH=$LSST_LIBRARY_PATH
export DYLD_LIBRARY_PATH=$LSST_LIBRARY_PATH

allCameras="auxTel imsim phosim ts8 ts3"
rerun="$(whoami)/tmp"				# rerun for processing
_ids=""

while [ X$1 != X ]; do
    case $1 in
	--dir*|-d)
	    shift
	    PRODUCT_DIR=$1;;
	-h)
	    cat <<EOF
Run the isr
Usage:
	runIsr_ci_lsst [options] cameras
If no cameras, process $allCameras
Options:
   --dir DIR  Base directory for data
   -h         Print this message
   --id XX    Add XX to the list of ids to process
   --rerun R  Rerun for processing (not calibs)
   -x, -v     Set bash option
EOF
	    exit 0;;
	-i|--id|--ids)
	    shift
	    _ids="$_ids $1"
	    ;;
	--rerun)
	    shift
	    rerun=$1
	    ;;
	-x|-v|-xv|-vx)
	    set $1;;
	*)
	    break;;
    esac
    shift
done

if [ X"$PRODUCT_DIR" = X"" ]; then
    echo "Please specify a directory for processed data with --dir" >&2
    exit 1
fi

cameras="$@"
if [ X"$cameras" = X"" ]; then
    cameras="$allCameras"
fi

for camera in $cameras; do
    DATA_DIR=$PRODUCT_DIR/$camera

    echo "Running ISR for $camera"

    rm -rf $DATA_DIR/rerun/$rerun

    configs=""

    case $camera in
	auxTel)
	    if [ X"$_ids" != X ]; then
		ids=$_ids
	    else
		ids="seqNum=37^38..69:4^70"
	    fi
	    configs="isr.overscanNumLeadingColumnsToSkip=20 isr.doDark=False isr.doFlat=False"
	    ;;
	imsim)
	    if [ X"$_ids" != X ]; then
		ids=$_ids
	    else
		ids="visit=204595"
	    fi
	    ;;
	phosim)
	    if [ X"$_ids" != X ]; then
		ids=$_ids
	    else
		ids="visit=204595"
	    fi
	    configs="isr.doBias=False isr.doDark=False isr.doFlat=False"
	    ;;
  ts3)
	    if [ X"$_ids" != X ]; then
		ids=$_ids
	    else
		ids="visit=201607220607067"
	    fi
	    configs="isr.overscanNumLeadingColumnsToSkip=20 isr.doBias=False isr.doDark=False isr.doFlat=False"
	    ;;
	ts8)
	    if [ X"$_ids" != X ]; then
		ids=$_ids
	    else
		ids="visit=201807241028453"
	    fi
	    configs="isr.overscanNumLeadingColumnsToSkip=20 isr.doDark=False isr.doFlat=False"
	    ;;
	*)
	    echo "Unknown camera \"$camera\"; skipping" >&2
	    continue
	    ;;
    esac

    if [ X"$configs" != X ]; then
	configs="-c $configs"
    fi
    runIsr.py $DATA_DIR --rerun $rerun --id $ids $configs
done
